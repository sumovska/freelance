# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.
# pylint: skip-file

import _pyhidapi_mac
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static) or hasattr(self, name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError(name)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0
del types


class hid_device_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, hid_device_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, hid_device_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["path"] = _pyhidapi_mac.hid_device_info_path_set
    __swig_getmethods__["path"] = _pyhidapi_mac.hid_device_info_path_get
    if _newclass:
        path = _swig_property(_pyhidapi_mac.hid_device_info_path_get, _pyhidapi_mac.hid_device_info_path_set)
    __swig_setmethods__["vendor_id"] = _pyhidapi_mac.hid_device_info_vendor_id_set
    __swig_getmethods__["vendor_id"] = _pyhidapi_mac.hid_device_info_vendor_id_get
    if _newclass:
        vendor_id = _swig_property(_pyhidapi_mac.hid_device_info_vendor_id_get, _pyhidapi_mac.hid_device_info_vendor_id_set)
    __swig_setmethods__["product_id"] = _pyhidapi_mac.hid_device_info_product_id_set
    __swig_getmethods__["product_id"] = _pyhidapi_mac.hid_device_info_product_id_get
    if _newclass:
        product_id = _swig_property(_pyhidapi_mac.hid_device_info_product_id_get, _pyhidapi_mac.hid_device_info_product_id_set)
    __swig_setmethods__["serial_number"] = _pyhidapi_mac.hid_device_info_serial_number_set
    __swig_getmethods__["serial_number"] = _pyhidapi_mac.hid_device_info_serial_number_get
    if _newclass:
        serial_number = _swig_property(_pyhidapi_mac.hid_device_info_serial_number_get, _pyhidapi_mac.hid_device_info_serial_number_set)
    __swig_setmethods__["release_number"] = _pyhidapi_mac.hid_device_info_release_number_set
    __swig_getmethods__["release_number"] = _pyhidapi_mac.hid_device_info_release_number_get
    if _newclass:
        release_number = _swig_property(_pyhidapi_mac.hid_device_info_release_number_get, _pyhidapi_mac.hid_device_info_release_number_set)
    __swig_setmethods__["manufacturer_string"] = _pyhidapi_mac.hid_device_info_manufacturer_string_set
    __swig_getmethods__["manufacturer_string"] = _pyhidapi_mac.hid_device_info_manufacturer_string_get
    if _newclass:
        manufacturer_string = _swig_property(_pyhidapi_mac.hid_device_info_manufacturer_string_get, _pyhidapi_mac.hid_device_info_manufacturer_string_set)
    __swig_setmethods__["product_string"] = _pyhidapi_mac.hid_device_info_product_string_set
    __swig_getmethods__["product_string"] = _pyhidapi_mac.hid_device_info_product_string_get
    if _newclass:
        product_string = _swig_property(_pyhidapi_mac.hid_device_info_product_string_get, _pyhidapi_mac.hid_device_info_product_string_set)
    __swig_setmethods__["usage_page"] = _pyhidapi_mac.hid_device_info_usage_page_set
    __swig_getmethods__["usage_page"] = _pyhidapi_mac.hid_device_info_usage_page_get
    if _newclass:
        usage_page = _swig_property(_pyhidapi_mac.hid_device_info_usage_page_get, _pyhidapi_mac.hid_device_info_usage_page_set)
    __swig_setmethods__["usage"] = _pyhidapi_mac.hid_device_info_usage_set
    __swig_getmethods__["usage"] = _pyhidapi_mac.hid_device_info_usage_get
    if _newclass:
        usage = _swig_property(_pyhidapi_mac.hid_device_info_usage_get, _pyhidapi_mac.hid_device_info_usage_set)
    __swig_setmethods__["interface_number"] = _pyhidapi_mac.hid_device_info_interface_number_set
    __swig_getmethods__["interface_number"] = _pyhidapi_mac.hid_device_info_interface_number_get
    if _newclass:
        interface_number = _swig_property(_pyhidapi_mac.hid_device_info_interface_number_get, _pyhidapi_mac.hid_device_info_interface_number_set)
    __swig_setmethods__["next"] = _pyhidapi_mac.hid_device_info_next_set
    __swig_getmethods__["next"] = _pyhidapi_mac.hid_device_info_next_get
    if _newclass:
        next = _swig_property(_pyhidapi_mac.hid_device_info_next_get, _pyhidapi_mac.hid_device_info_next_set)

    def __init__(self, *args):
        this = _pyhidapi_mac.new_hid_device_info(*args)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _pyhidapi_mac.delete_hid_device_info
    __del__ = lambda self: None
hid_device_info_swigregister = _pyhidapi_mac.hid_device_info_swigregister
hid_device_info_swigregister(hid_device_info)


class hid_wchar_string(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, hid_wchar_string, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, hid_wchar_string, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wchar_string"] = _pyhidapi_mac.hid_wchar_string_wchar_string_set
    __swig_getmethods__["wchar_string"] = _pyhidapi_mac.hid_wchar_string_wchar_string_get
    if _newclass:
        wchar_string = _swig_property(_pyhidapi_mac.hid_wchar_string_wchar_string_get, _pyhidapi_mac.hid_wchar_string_wchar_string_set)

    def __init__(self, *args):
        this = _pyhidapi_mac.new_hid_wchar_string(*args)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _pyhidapi_mac.delete_hid_wchar_string
    __del__ = lambda self: None
hid_wchar_string_swigregister = _pyhidapi_mac.hid_wchar_string_swigregister
hid_wchar_string_swigregister(hid_wchar_string)

hid_init = _pyhidapi_mac.hid_init
hid_exit = _pyhidapi_mac.hid_exit
hid_enumerate = _pyhidapi_mac.hid_enumerate
hid_free_enumeration = _pyhidapi_mac.hid_free_enumeration
hid_open = _pyhidapi_mac.hid_open
hid_open_path = _pyhidapi_mac.hid_open_path
hid_write = _pyhidapi_mac.hid_write
hid_read_timeout = _pyhidapi_mac.hid_read_timeout
hid_read = _pyhidapi_mac.hid_read
hid_set_nonblocking = _pyhidapi_mac.hid_set_nonblocking
hid_send_feature_report = _pyhidapi_mac.hid_send_feature_report
hid_get_feature_report = _pyhidapi_mac.hid_get_feature_report
hid_close = _pyhidapi_mac.hid_close
hid_get_manufacturer_string = _pyhidapi_mac.hid_get_manufacturer_string
hid_get_product_string = _pyhidapi_mac.hid_get_product_string
hid_get_serial_number_string = _pyhidapi_mac.hid_get_serial_number_string
hid_get_indexed_string = _pyhidapi_mac.hid_get_indexed_string
hid_error = _pyhidapi_mac.hid_error
hid_open_char = _pyhidapi_mac.hid_open_char
hid_get_product_string_buffer = _pyhidapi_mac.hid_get_product_string_buffer
hid_get_serial_number_string_buffer = _pyhidapi_mac.hid_get_serial_number_string_buffer
hid_get_manufacturer_string_buffer = _pyhidapi_mac.hid_get_manufacturer_string_buffer
